{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-list\"\n};\nconst _hoisted_2 = {\n  class: \"task-actions\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_5 = {\n  key: 2,\n  class: \"no-tasks\"\n};\nconst _hoisted_6 = {\n  key: 3,\n  class: \"task-cards\"\n};\nconst _hoisted_7 = {\n  class: \"task-card-header\"\n};\nconst _hoisted_8 = {\n  class: \"task-status\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"status completed\"\n};\nconst _hoisted_10 = {\n  key: 1,\n  class: \"status pending\"\n};\nconst _hoisted_11 = {\n  class: \"task-card-content\"\n};\nconst _hoisted_12 = {\n  class: \"task-card-footer\"\n};\nconst _hoisted_13 = {\n  class: \"task-dates\"\n};\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  class: \"task-actions\"\n};\nconst _hoisted_16 = [\"onClick\"];\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Task List\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    class: \"btn btn-primary\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/create'))\n  }, \" Add New Task \")]), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" Loading tasks... \")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _toDisplayString($data.error), 1 /* TEXT */)) : $data.tasks.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \" No tasks found. Create a new task to get started. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, task => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: task.id,\n      class: _normalizeClass([\"task-card\", {\n        'completed': task.completed\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h3\", null, _toDisplayString(task.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [task.completed ? (_openBlock(), _createElementBlock(\"span\", _hoisted_9, \"Completed\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"Pending\"))])]), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"p\", null, _toDisplayString(task.description), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"small\", null, \"Created: \" + _toDisplayString($options.formatDate(task.createdAt)), 1 /* TEXT */), task.updatedAt ? (_openBlock(), _createElementBlock(\"small\", _hoisted_14, \"Last updated: \" + _toDisplayString($options.formatDate(task.updatedAt)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_15, [!task.completed ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.completeTask(task.id),\n      class: \"btn btn-success\"\n    }, \" Mark Complete \", 8 /* PROPS */, _hoisted_16)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n      onClick: $event => _ctx.$router.push(`/edit/${task.id}`),\n      class: \"btn btn-info\"\n    }, \" Edit \", 8 /* PROPS */, _hoisted_17), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteTask(task.id),\n      class: \"btn btn-danger\"\n    }, \" Delete \", 8 /* PROPS */, _hoisted_18)])])], 2 /* CLASS */);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","$event","_ctx","$router","push","$data","loading","_hoisted_3","error","_hoisted_4","_toDisplayString","tasks","length","_hoisted_5","_hoisted_6","_Fragment","_renderList","task","id","_normalizeClass","completed","_hoisted_7","title","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","description","_hoisted_12","_hoisted_13","$options","formatDate","createdAt","updatedAt","_hoisted_14","_createCommentVNode","_hoisted_15","completeTask","_hoisted_16","_hoisted_17","deleteTask","_hoisted_18"],"sources":["C:\\Users\\yeoyi\\IdeaProjects\\Task-Manager\\frontend\\src\\views\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-list\">\r\n    <h2>Task List</h2>\r\n\r\n    <div class=\"task-actions\">\r\n      <button class=\"btn btn-primary\" @click=\"$router.push('/create')\">\r\n        Add New Task\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading tasks...\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"error\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <div v-else-if=\"tasks.length === 0\" class=\"no-tasks\">\r\n      No tasks found. Create a new task to get started.\r\n    </div>\r\n\r\n    <div v-else class=\"task-cards\">\r\n      <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-card\" :class=\"{ 'completed': task.completed }\">\r\n        <div class=\"task-card-header\">\r\n          <h3>{{ task.title }}</h3>\r\n          <div class=\"task-status\">\r\n            <span v-if=\"task.completed\" class=\"status completed\">Completed</span>\r\n            <span v-else class=\"status pending\">Pending</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"task-card-content\">\r\n          <p>{{ task.description }}</p>\r\n        </div>\r\n\r\n        <div class=\"task-card-footer\">\r\n          <div class=\"task-dates\">\r\n            <small>Created: {{ formatDate(task.createdAt) }}</small>\r\n            <small v-if=\"task.updatedAt\">Last updated: {{ formatDate(task.updatedAt) }}</small>\r\n          </div>\r\n\r\n          <div class=\"task-actions\">\r\n            <button v-if=\"!task.completed\" @click=\"completeTask(task.id)\" class=\"btn btn-success\">\r\n              Mark Complete\r\n            </button>\r\n            <button @click=\"$router.push(`/edit/${task.id}`)\" class=\"btn btn-info\">\r\n              Edit\r\n            </button>\r\n            <button @click=\"deleteTask(task.id)\" class=\"btn btn-danger\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskService from '../services/TaskService';\r\n\r\nexport default {\r\n  name: 'TaskList',\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTasks();\r\n  },\r\n  methods: {\r\n    fetchTasks() {\r\n      this.loading = true;\r\n      TaskService.getAllTasks()\r\n        .then(response => {\r\n          this.tasks = response.data;\r\n          this.loading = false;\r\n        })\r\n        .catch(error => {\r\n          this.error = 'Error fetching tasks: ' + (error.response?.data?.message || error.message);\r\n          this.loading = false;\r\n        });\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString();\r\n    },\r\n    completeTask(id) {\r\n      TaskService.markTaskCompleted(id)\r\n        .then(() => {\r\n          this.fetchTasks();\r\n        })\r\n        .catch(error => {\r\n          this.error = 'Error completing task: ' + (error.response?.data?.message || error.message);\r\n        });\r\n    },\r\n    deleteTask(id) {\r\n      if (confirm('Are you sure you want to delete this task?')) {\r\n        TaskService.deleteTask(id)\r\n          .then(() => {\r\n            this.fetchTasks();\r\n          })\r\n          .catch(error => {\r\n            this.error = 'Error deleting task: ' + (error.response?.data?.message || error.message);\r\n          });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-list {\r\n  max-width: 100%;\r\n}\r\n\r\n.task-actions {\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.task-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.task-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.task-card.completed {\r\n  background-color: #f8f9fa;\r\n  border-left: 4px solid var(--success-color);\r\n}\r\n\r\n.task-card:not(.completed) {\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.task-card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.task-status .status {\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  font-size: 0.75rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.status.completed {\r\n  background-color: var(--success-color);\r\n  color: white;\r\n}\r\n\r\n.status.pending {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.task-card-content {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.task-card-footer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.task-dates {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.task-actions {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.btn {\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.btn-success {\r\n  background-color: var(--success-color);\r\n  color: white;\r\n}\r\n\r\n.btn-info {\r\n  background-color: #17a2b8;\r\n  color: white;\r\n}\r\n\r\n.btn-danger {\r\n  background-color: var(--danger-color);\r\n  color: white;\r\n}\r\n\r\n.btn:hover {\r\n  opacity: 0.9;\r\n}\r\n\r\n.loading, .error, .no-tasks {\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.error {\r\n  color: var(--danger-color);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .task-cards {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .task-card-header {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .task-status {\r\n    margin-top: 0.5rem;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}