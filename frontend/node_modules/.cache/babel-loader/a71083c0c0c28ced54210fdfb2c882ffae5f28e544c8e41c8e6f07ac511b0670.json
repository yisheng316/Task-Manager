{"ast":null,"code":"import TaskService from '../services/TaskService';\nexport default {\n  name: 'TaskList',\n  data() {\n    return {\n      tasks: [],\n      loading: true,\n      error: null\n    };\n  },\n  created() {\n    this.fetchTasks();\n  },\n  methods: {\n    fetchTasks() {\n      this.loading = true;\n      TaskService.getAllTasks().then(response => {\n        this.tasks = response.data;\n        this.loading = false;\n      }).catch(error => {\n        this.error = 'Error fetching tasks: ' + (error.response?.data?.message || error.message);\n        this.loading = false;\n      });\n    },\n    formatDate(dateString) {\n      if (!dateString) return 'N/A';\n      const date = new Date(dateString);\n      return date.toLocaleString();\n    },\n    completeTask(id) {\n      TaskService.markTaskCompleted(id).then(() => {\n        this.fetchTasks();\n      }).catch(error => {\n        this.error = 'Error completing task: ' + (error.response?.data?.message || error.message);\n      });\n    },\n    deleteTask(id) {\n      if (confirm('Are you sure you want to delete this task?')) {\n        TaskService.deleteTask(id).then(() => {\n          this.fetchTasks();\n        }).catch(error => {\n          this.error = 'Error deleting task: ' + (error.response?.data?.message || error.message);\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["TaskService","name","data","tasks","loading","error","created","fetchTasks","methods","getAllTasks","then","response","catch","message","formatDate","dateString","date","Date","toLocaleString","completeTask","id","markTaskCompleted","deleteTask","confirm"],"sources":["C:\\Users\\yeoyi\\IdeaProjects\\Task-Manager\\frontend\\src\\views\\TaskList.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-list\">\r\n    <h2>Task List</h2>\r\n\r\n    <div class=\"task-actions\">\r\n      <button class=\"btn btn-primary\" @click=\"$router.push('/create')\">\r\n        Add New Task\r\n      </button>\r\n    </div>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading tasks...\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"error\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <div v-else-if=\"tasks.length === 0\" class=\"no-tasks\">\r\n      No tasks found. Create a new task to get started.\r\n    </div>\r\n\r\n    <div v-else class=\"task-cards\">\r\n      <div v-for=\"task in tasks\" :key=\"task.id\" class=\"task-card\" :class=\"{ 'completed': task.completed }\">\r\n        <div class=\"task-card-header\">\r\n          <h3>{{ task.title }}</h3>\r\n          <div class=\"task-status\">\r\n            <span v-if=\"task.completed\" class=\"status completed\">Completed</span>\r\n            <span v-else class=\"status pending\">Pending</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"task-card-content\">\r\n          <p>{{ task.description }}</p>\r\n        </div>\r\n\r\n        <div class=\"task-card-footer\">\r\n          <div class=\"task-dates\">\r\n            <small>Created: {{ formatDate(task.createdAt) }}</small>\r\n            <small v-if=\"task.updatedAt\">Last updated: {{ formatDate(task.updatedAt) }}</small>\r\n          </div>\r\n\r\n          <div class=\"task-actions\">\r\n            <button v-if=\"!task.completed\" @click=\"completeTask(task.id)\" class=\"btn btn-success\">\r\n              Mark Complete\r\n            </button>\r\n            <button @click=\"$router.push(`/edit/${task.id}`)\" class=\"btn btn-info\">\r\n              Edit\r\n            </button>\r\n            <button @click=\"deleteTask(task.id)\" class=\"btn btn-danger\">\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskService from '../services/TaskService';\r\n\r\nexport default {\r\n  name: 'TaskList',\r\n  data() {\r\n    return {\r\n      tasks: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchTasks();\r\n  },\r\n  methods: {\r\n    fetchTasks() {\r\n      this.loading = true;\r\n      TaskService.getAllTasks()\r\n        .then(response => {\r\n          this.tasks = response.data;\r\n          this.loading = false;\r\n        })\r\n        .catch(error => {\r\n          this.error = 'Error fetching tasks: ' + (error.response?.data?.message || error.message);\r\n          this.loading = false;\r\n        });\r\n    },\r\n    formatDate(dateString) {\r\n      if (!dateString) return 'N/A';\r\n      const date = new Date(dateString);\r\n      return date.toLocaleString();\r\n    },\r\n    completeTask(id) {\r\n      TaskService.markTaskCompleted(id)\r\n        .then(() => {\r\n          this.fetchTasks();\r\n        })\r\n        .catch(error => {\r\n          this.error = 'Error completing task: ' + (error.response?.data?.message || error.message);\r\n        });\r\n    },\r\n    deleteTask(id) {\r\n      if (confirm('Are you sure you want to delete this task?')) {\r\n        TaskService.deleteTask(id)\r\n          .then(() => {\r\n            this.fetchTasks();\r\n          })\r\n          .catch(error => {\r\n            this.error = 'Error deleting task: ' + (error.response?.data?.message || error.message);\r\n          });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-list {\r\n  max-width: 100%;\r\n}\r\n\r\n.task-actions {\r\n  margin-bottom: 1rem;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.task-cards {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 1rem;\r\n}\r\n\r\n.task-card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n  padding: 1rem;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.task-card.completed {\r\n  background-color: #f8f9fa;\r\n  border-left: 4px solid var(--success-color);\r\n}\r\n\r\n.task-card:not(.completed) {\r\n  border-left: 4px solid var(--primary-color);\r\n}\r\n\r\n.task-card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: flex-start;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.task-status .status {\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 4px;\r\n  font-size: 0.75rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.status.completed {\r\n  background-color: var(--success-color);\r\n  color: white;\r\n}\r\n\r\n.status.pending {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.task-card-content {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.task-card-footer {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n}\r\n\r\n.task-dates {\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 0.8rem;\r\n  color: #6c757d;\r\n}\r\n\r\n.task-actions {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n.btn {\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.btn-success {\r\n  background-color: var(--success-color);\r\n  color: white;\r\n}\r\n\r\n.btn-info {\r\n  background-color: #17a2b8;\r\n  color: white;\r\n}\r\n\r\n.btn-danger {\r\n  background-color: var(--danger-color);\r\n  color: white;\r\n}\r\n\r\n.btn:hover {\r\n  opacity: 0.9;\r\n}\r\n\r\n.loading, .error, .no-tasks {\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.error {\r\n  color: var(--danger-color);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .task-cards {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .task-card-header {\r\n    flex-direction: column;\r\n  }\r\n\r\n  .task-status {\r\n    margin-top: 0.5rem;\r\n  }\r\n}\r\n</style>"],"mappings":"AA4DA,OAAOA,WAAU,MAAO,yBAAyB;AAEjD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC;EACnB,CAAC;EACDC,OAAO,EAAE;IACPD,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,OAAM,GAAI,IAAI;MACnBJ,WAAW,CAACS,WAAW,CAAC,EACrBC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACR,KAAI,GAAIQ,QAAQ,CAACT,IAAI;QAC1B,IAAI,CAACE,OAAM,GAAI,KAAK;MACtB,CAAC,EACAQ,KAAK,CAACP,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,wBAAuB,IAAKA,KAAK,CAACM,QAAQ,EAAET,IAAI,EAAEW,OAAM,IAAKR,KAAK,CAACQ,OAAO,CAAC;QACxF,IAAI,CAACT,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACN,CAAC;IACDU,UAAUA,CAACC,UAAU,EAAE;MACrB,IAAI,CAACA,UAAU,EAAE,OAAO,KAAK;MAC7B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,UAAU,CAAC;MACjC,OAAOC,IAAI,CAACE,cAAc,CAAC,CAAC;IAC9B,CAAC;IACDC,YAAYA,CAACC,EAAE,EAAE;MACfpB,WAAW,CAACqB,iBAAiB,CAACD,EAAE,EAC7BV,IAAI,CAAC,MAAM;QACV,IAAI,CAACH,UAAU,CAAC,CAAC;MACnB,CAAC,EACAK,KAAK,CAACP,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,yBAAwB,IAAKA,KAAK,CAACM,QAAQ,EAAET,IAAI,EAAEW,OAAM,IAAKR,KAAK,CAACQ,OAAO,CAAC;MAC3F,CAAC,CAAC;IACN,CAAC;IACDS,UAAUA,CAACF,EAAE,EAAE;MACb,IAAIG,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDvB,WAAW,CAACsB,UAAU,CAACF,EAAE,EACtBV,IAAI,CAAC,MAAM;UACV,IAAI,CAACH,UAAU,CAAC,CAAC;QACnB,CAAC,EACAK,KAAK,CAACP,KAAI,IAAK;UACd,IAAI,CAACA,KAAI,GAAI,uBAAsB,IAAKA,KAAK,CAACM,QAAQ,EAAET,IAAI,EAAEW,OAAM,IAAKR,KAAK,CAACQ,OAAO,CAAC;QACzF,CAAC,CAAC;MACN;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}