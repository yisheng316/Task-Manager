{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TaskService from '../services/TaskService';\nexport default {\n  name: 'TaskForm',\n  props: {\n    id: {\n      type: String,\n      default: null\n    }\n  },\n  data() {\n    return {\n      task: {\n        title: '',\n        description: '',\n        completed: false\n      },\n      loading: false,\n      error: null\n    };\n  },\n  computed: {\n    isEditMode() {\n      return !!this.id;\n    }\n  },\n  created() {\n    if (this.isEditMode) {\n      this.fetchTask();\n    }\n  },\n  methods: {\n    fetchTask() {\n      this.loading = true;\n      TaskService.getTaskById(this.id).then(response => {\n        this.task = response.data;\n        this.loading = false;\n      }).catch(error => {\n        this.error = 'Error fetching task: ' + (error.response?.data?.message || error.message);\n        this.loading = false;\n      });\n    },\n    saveTask() {\n      this.loading = true;\n      const savePromise = this.isEditMode ? TaskService.updateTask(this.id, this.task) : TaskService.createTask(this.task);\n      savePromise.then(() => {\n        this.$router.push('/');\n      }).catch(error => {\n        this.error = `Error ${this.isEditMode ? 'updating' : 'creating'} task: ` + (error.response?.data?.message || error.message);\n        this.loading = false;\n      });\n    }\n  }\n};","map":{"version":3,"names":["TaskService","name","props","id","type","String","default","data","task","title","description","completed","loading","error","computed","isEditMode","created","fetchTask","methods","getTaskById","then","response","catch","message","saveTask","savePromise","updateTask","createTask","$router","push"],"sources":["C:\\Users\\yeoyi\\IdeaProjects\\Task-Manager\\frontend\\src\\views\\TaskForm.vue"],"sourcesContent":["<template>\r\n  <div class=\"task-form\">\r\n    <h2>{{ isEditMode ? 'Edit Task' : 'Create New Task' }}</h2>\r\n\r\n    <div v-if=\"loading\" class=\"loading\">\r\n      Loading...\r\n    </div>\r\n\r\n    <div v-else-if=\"error\" class=\"error\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <form v-else @submit.prevent=\"saveTask\">\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          v-model=\"task.title\"\r\n          required\r\n          placeholder=\"Enter task title\"\r\n          class=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"description\">Description</label>\r\n        <textarea\r\n          id=\"description\"\r\n          v-model=\"task.description\"\r\n          placeholder=\"Enter task description\"\r\n          class=\"form-control\"\r\n          rows=\"4\"\r\n        ></textarea>\r\n      </div>\r\n\r\n      <div v-if=\"isEditMode\" class=\"form-group checkbox\">\r\n        <label>\r\n          <input type=\"checkbox\" v-model=\"task.completed\" />\r\n          Mark as completed\r\n        </label>\r\n      </div>\r\n\r\n      <div class=\"form-actions\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" @click=\"$router.push('/')\">\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n          {{ isEditMode ? 'Update Task' : 'Create Task' }}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TaskService from '../services/TaskService';\r\n\r\nexport default {\r\n  name: 'TaskForm',\r\n  props: {\r\n    id: {\r\n      type: String,\r\n      default: null\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      task: {\r\n        title: '',\r\n        description: '',\r\n        completed: false\r\n      },\r\n      loading: false,\r\n      error: null\r\n    };\r\n  },\r\n  computed: {\r\n    isEditMode() {\r\n      return !!this.id;\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isEditMode) {\r\n      this.fetchTask();\r\n    }\r\n  },\r\n  methods: {\r\n    fetchTask() {\r\n      this.loading = true;\r\n      TaskService.getTaskById(this.id)\r\n        .then(response => {\r\n          this.task = response.data;\r\n          this.loading = false;\r\n        })\r\n        .catch(error => {\r\n          this.error = 'Error fetching task: ' + (error.response?.data?.message || error.message);\r\n          this.loading = false;\r\n        });\r\n    },\r\n    saveTask() {\r\n      this.loading = true;\r\n\r\n      const savePromise = this.isEditMode\r\n        ? TaskService.updateTask(this.id, this.task)\r\n        : TaskService.createTask(this.task);\r\n\r\n      savePromise\r\n        .then(() => {\r\n          this.$router.push('/');\r\n        })\r\n        .catch(error => {\r\n          this.error = `Error ${this.isEditMode ? 'updating' : 'creating'} task: ` +\r\n            (error.response?.data?.message || error.message);\r\n          this.loading = false;\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.task-form {\r\n  max-width: 600px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 1.5rem;\r\n}\r\n\r\n.form-group label {\r\n  display: block;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n}\r\n\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  border: 1px solid #ced4da;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n}\r\n\r\n.form-control:focus {\r\n  border-color: var(--primary-color);\r\n  outline: none;\r\n  box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);\r\n}\r\n\r\n.checkbox {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.checkbox input {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.form-actions {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n}\r\n\r\n.btn {\r\n  padding: 0.375rem 0.75rem;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: 500;\r\n  transition: all 0.2s;\r\n}\r\n\r\n.btn-primary {\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n}\r\n\r\n.btn-secondary {\r\n  background-color: #6c757d;\r\n  color: white;\r\n}\r\n\r\n.btn:hover {\r\n  opacity: 0.9;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  margin: 2rem 0;\r\n}\r\n\r\n.error {\r\n  color: var(--danger-color);\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .task-form {\r\n    padding: 0 1rem;\r\n  }\r\n}\r\n</style>"],"mappings":";AAwDA,OAAOA,WAAU,MAAO,yBAAyB;AAEjD,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,EAAE,EAAE;MACFC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE;MACb,CAAC;MACDC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,CAAC,CAAC,IAAI,CAACZ,EAAE;IAClB;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACD,UAAU,EAAE;MACnB,IAAI,CAACE,SAAS,CAAC,CAAC;IAClB;EACF,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACL,OAAM,GAAI,IAAI;MACnBZ,WAAW,CAACmB,WAAW,CAAC,IAAI,CAAChB,EAAE,EAC5BiB,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACb,IAAG,GAAIa,QAAQ,CAACd,IAAI;QACzB,IAAI,CAACK,OAAM,GAAI,KAAK;MACtB,CAAC,EACAU,KAAK,CAACT,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,uBAAsB,IAAKA,KAAK,CAACQ,QAAQ,EAAEd,IAAI,EAAEgB,OAAM,IAAKV,KAAK,CAACU,OAAO,CAAC;QACvF,IAAI,CAACX,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACN,CAAC;IACDY,QAAQA,CAAA,EAAG;MACT,IAAI,CAACZ,OAAM,GAAI,IAAI;MAEnB,MAAMa,WAAU,GAAI,IAAI,CAACV,UAAS,GAC9Bf,WAAW,CAAC0B,UAAU,CAAC,IAAI,CAACvB,EAAE,EAAE,IAAI,CAACK,IAAI,IACzCR,WAAW,CAAC2B,UAAU,CAAC,IAAI,CAACnB,IAAI,CAAC;MAErCiB,WAAU,CACPL,IAAI,CAAC,MAAM;QACV,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,CAAC,EACAP,KAAK,CAACT,KAAI,IAAK;QACd,IAAI,CAACA,KAAI,GAAI,SAAS,IAAI,CAACE,UAAS,GAAI,UAAS,GAAI,UAAU,SAAQ,IACpEF,KAAK,CAACQ,QAAQ,EAAEd,IAAI,EAAEgB,OAAM,IAAKV,KAAK,CAACU,OAAO,CAAC;QAClD,IAAI,CAACX,OAAM,GAAI,KAAK;MACtB,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}